Index: cz/vutbr/web/css/CSSFactory.java
===================================================================
--- cz/vutbr/web/css/CSSFactory.java
+++ cz/vutbr/web/css/CSSFactory.java
@@ -6,6 +6,8 @@
 import java.lang.reflect.Method;
 import java.net.MalformedURLException;
 import java.net.URL;
+import javax.xml.transform.Source;
+import javax.xml.transform.URIResolver;
 
 import org.fit.net.DataURLHandler;
 import org.slf4j.Logger;
@@ -78,6 +80,8 @@
 	 */
 	private static Class<? extends NodeData> ndImpl;
 
+	private static URIResolver ur;
+
 	/**
 	 * Whether to allow lengths with no units and interpret them as pixels.
 	 */
@@ -288,6 +292,32 @@
 	}
 
 	/**
+	 * Registers URIResolver.
+	 * 
+	 * @param uriResolver
+	 *            New URIResolver instance
+	 */
+	public static final void registerURIResolver(URIResolver newURIResolver) {
+		ur = newURIResolver;
+	}
+
+	/**
+	 * Returns registered URIResolver.
+	 * 
+	 * @return URIResolver instance
+	 */
+	public static final URIResolver getURIResolver() {
+		if (ur == null) {
+			ur = new URIResolver() {
+				public Source resolve(String href, String base) {
+					return null;
+				}
+			};
+		}
+		return ur;
+	}
+
+	/**
 	 * Parses URL into StyleSheet
 	 * 
 	 * @param url
Index: cz/vutbr/web/csskit/antlr/CSSInputStream.java
===================================================================
--- cz/vutbr/web/csskit/antlr/CSSInputStream.java
+++ cz/vutbr/web/csskit/antlr/CSSInputStream.java
@@ -8,15 +8,22 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
+import java.net.MalformedURLException;
 import java.net.URL;
 import java.net.URLConnection;
 import java.nio.charset.Charset;
 import java.util.zip.GZIPInputStream;
 
+import javax.xml.transform.Source;
+import javax.xml.transform.TransformerException;
+import javax.xml.transform.URIResolver;
+
 import org.antlr.runtime.ANTLRInputStream;
 import org.antlr.runtime.ANTLRReaderStream;
 import org.antlr.runtime.CharStream;
 
+import cz.vutbr.web.css.CSSFactory;
+
 /**
  * Wraps ANTLR stream with useful decorations,
  * mainly to allow switching encoding on lexer
@@ -55,6 +62,7 @@
 	 */
 	private String encoding;
 	
+	private static final URIResolver ur = CSSFactory.getURIResolver();
 	
 	public static CSSInputStream stringStream(String source) throws IOException {
 		CSSInputStream stream = new CSSInputStream();
@@ -72,6 +80,14 @@
 	public static CSSInputStream urlStream(URL source, String encoding) throws IOException {
 		CSSInputStream stream = new CSSInputStream();
 		
+		try {
+			Source resolvedSource = ur.resolve(source.toString(), "");	
+			if (resolvedSource != null)
+				source = new URL(resolvedSource.getSystemId());
+		} catch (TransformerException e) {
+		} catch (MalformedURLException e) {
+		}
+
 		stream.base = source;
 		if (encoding != null)
             stream.encoding = encoding;
@@ -221,6 +237,13 @@
 	 * @param base The new base URL.
 	 */
 	public void setBase(URL base) {
+		try {
+			Source resolvedBase = ur.resolve(base.toString(), "");	
+			if (resolvedBase != null)
+				base = new URL(resolvedBase.getSystemId());
+		} catch (TransformerException e) {
+		} catch (MalformedURLException e) {
+		}
 	    this.base = base;
 	}
 	
